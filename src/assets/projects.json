{
  "active": [
    {
      "name": "Java Decompiler",
      "tags": ["JVM", "C++17"],
      "lang": "C++",
      "url": "https://github.com/Caellian/java-decompiler",
      "description": [
        "Java 14 decompiler written from scratch to be as performant with large .jar files as possible.",
        "What I initially wanted to write is a deobfuscator, but bytecode contains additional information which removes the need for parsing code and assembling AST.",
        "There is also no decompiler for some other JVM languages so I plan gradually supporting them as this project progresses."
      ]
    },
    {
      "name": "zipster",
      "tags": ["zip", "data management", "C++17"],
      "lang": "C++",
      "description": [
        "Zip format reader I started writing due to requirements of my decompiler project.",
        "It's not crucial I finish this but it would allow better file tracking (position of file in archive) as minizip makes it very hard to keep track of multiple file streams.",
        "This is meant to be a modern replacement for minizip once it's finished."
      ]
    },
    {
      "name": "VoxelEngine",
      "tags": ["rendering", "vulkan", "lua scripting", "C++20"],
      "lang": "C++",
      "description": [
        "Vulkan voxel game engine focused on dynamic and procedurally generated content.",
        "I love writing game logic and this scratches that itch when I don't feel like doing anything \"productive\"",
        "It also allows me to explore different rendering techniques, SPIR-V, low level rendering, data management, ...",
        "I plan on releasing it under MIT License once it's functional."
      ]
    },
    {
      "name": "BinBlob",
      "tags": ["data management", "C++20", "boost hana"],
      "lang": "C++",
      "description": [
        "Library utilising concepts added in C++20 to simplify loading structured binary data.",
        "It generates code for loading/saving binary data from provided tuple type signature.",
        "I use it this project to learn how concepts work."
      ]
    }
  ],
  "previous": [
    {
      "name": "Math",
      "tags": ["math", "rendering", "matrix", "transformations"],
      "lang": "Kotlin",
      "url": "https://github.com/Caellian/Math",
      "description": [
        "Library for n-dimensional vector and matrix calculation.",
        "Math library has everything glm for C++ allows, but it also has constructors and initialization methods not usually used for typical games.",
        "It's made for Kotlin but works just as well with Java and is practical in both languages due to many utility functions."
      ]
    },
    {
      "name": "ArgLib",
      "tags": ["finished", "data management"],
      "lang": "Kotlin",
      "url": "https://github.com/Caellian/ArgLib",
      "description": [
        "Argument parsing/handling library with primary focus on simplicity of configuration.",
        "I wrote it for some of my simpler apps that would've been overbloated by some of the more stable and bigger argument parsers."
      ]
    },
    {
      "name": "NoteStream",
      "tags": ["abandoned", "android", "services", "SQLite"],
      "lang": "Kotlin",
      "url": "https://github.com/Caellian/NoteStream",
      "description": [
        "Android application for streaming YouTube and playing local music.",
        "NoteStream supports creating mixed playlists, downloading individual songs from YouTube as well as entire playlists and much more.",
        "It was what I initailly used to get into Android developement and learn about SQLite."
      ]
    },
    {
      "name": "ParadoxGenerator",
      "tags": ["finished", "gui", "swing", "xml"],
      "lang": "Java",
      "url": "https://github.com/Caellian/ParadoxGenerator",
      "description": [
        "Random string generator completely configurable through XML, supporting templates, internal functions and localization.",
        "It contains a lot of different internal random string, number, format, date generators.",
        "I feel it needs a rewrite, but I don't need it anymore."
      ]
    },
    {
      "name": "FlowAPI",
      "tags": ["finished", "data management", "abstraction"],
      "lang": "Java",
      "url": "https://github.com/Caellian/FlowAPI",
      "description": [
        "API for managing flow of abstract packets of abstract data in a node network.",
        "It was originally designed as a Minecraft power API but it helps with transfer of any form of data for both Minecraft (items, fluids, magic, ...) and for other programs.",
        "It also helps with handling object conversion and supplies several useful classes which make collaboration much easier."
      ]
    },
    {
      "name": "Kson",
      "tags": ["finished", "json"],
      "lang": "Kotlin",
      "url": "https://github.com/Caellian/Kson",
      "description": [
        "Library simplifying JSON serialization and deserialization of Kotlin objects (singleton classes).",
        "It doesn't do very much, I wrote it to streamline loading program configuration files."
      ]
    },
    {
      "name": "Crawler",
      "tags": ["finished", "beatiful soup", "regex", "phantom-js"],
      "lang": "Python",
      "url": "https://github.com/Caellian/Crawler",
      "description": [
        "Web regex search engine/crawler.",
        "It allows specifying regex to be searched for on different websites, specifying search query, and returns a list of matches.",
        "It uses PhantomJS which is a headless V8 implementation to acquire results from Google."
      ]
    },
    {
      "name": "SmartFloodFill MCEdit Filter",
      "tags": ["finished", "discontinued", "bfs", "mcedit", "minecraft"],
      "lang": "Python",
      "url": "https://github.com/Caellian/MCEdit-Filters",
      "description": [
        "Flood fill filter for MCEdit (Minecraft map editor) taking into account blocks sharing sides or edges (configurable).",
        "I used this project to learn writing MCEdit filters, but I don't have much use for it nowadays."
      ]
    },
    {
      "name": "Bow Engine",
      "tags": ["rendering", "basic"],
      "lang": "Java",
      "url": "https://github.com/Caellian/BowEngine",
      "description": [
        "LWJGL2 OpenGL rendering engine.",
        "This was the first game engine I wrote, it was painfuly slow due to my lack of experience and knowledge with rendering back then.",
        "I even intended on using annotations for runtime physics handling which was... not very thought out. My head feels better now."
      ]
    }
  ],
  "forks": [
    {
      "name": "review-heatmap",
      "tags": ["productivity", "learning"],
      "lang": "Python",
      "url": "https://github.com/Caellian/review-heatmap",
      "description": [
        "Dark themed review heatmap for Anki.",
        "Fork of original review-heatmap customised to look neat with dark theme."
      ]
    },
    {
      "name": "feh",
      "tags": ["json"],
      "lang": "C",
      "url": "https://github.com/Caellian/feh",
      "description": [
        "feh is an image viewer.",
        "Modified version of feh with added support for JSON configuration files.",
        "I was asked by a teacher in my secondary school to add support for specifying custom image display times (images with text should be displayed longer) so I added support for this through configuration files."
      ]
    },
    {
      "name": "Enigma",
      "tags": ["swing", "code manipulation"],
      "lang": "Java",
      "url": "https://github.com/Caellian/Enigma",
      "description": [
        "Enigma is a tool for deobfuscation of Java bytecode.",
        "I added some gui components and menus that made my work a lot easier later."
      ]
    }
  ]
}

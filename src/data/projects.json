[
  {
    "id": "contiguous-mem",
    "name": "contiguous-mem",
    "tags": ["allocator", "memory management", "systems"],
    "lang": "Rust",
    "active": true,
    "url": "https://github.com/Caellian/contiguous_mem",
    "description": [
      "Created an arena allocator in the form of a heterogeneous collection that stores the types of stored entries at the point of insertion.",
      "Abstracted details about internal data types to allow for usage independently of the desired referencing method (`Owned`, `Rc`, `Arc`) and state storage (`RefCell`, `Mutex`).",
      "Added support for switching the background allocator from the system-wide (`malloc`) to specialized."
    ]
  },
  {
    "id": "litesim",
    "name": "litesim",
    "tags": ["simulation", "abstraction"],
    "lang": "Rust",
    "active": true,
    "url": "https://github.com/Caellian/litesim",
    "description": [
      "Discrete-event simulation library.",
      "Used proc-macros to greatly simplify implementation of simulation models."
    ]
  },
  {
    "id": "wordel",
    "name": "Wordel",
    "tags": ["Avalonia UI", "gui"],
    "lang": "C#",
    "url": "https://github.com/Caellian/Wordel",
    "description": [
      "A wordle clone I wrote as a final assignment for a class.",
      "I learned basics of modern C# through this project, as well as using a multi-platform UI framework."
    ]
  },
  {
    "id": "voxel_engine",
    "name": "Voxel Engine",
    "tags": ["rendering", "WGPU"],
    "lang": "Rust",
    "description": [
      "Vulkan voxel game engine focused on dynamic and procedurally generated content.",
      "It allows me to explore different rendering techniques, SPIR-V, low level rendering, data management, ..."
    ]
  },
  {
    "id": "lisp_interpreter",
    "name": "Lisp Interpreter",
    "tags": ["interpreter"],
    "lang": "C",
    "description": [
      "I wanted to write a project in C to remind myself of times before borrow checker existed.",
      "As I never wrote a proper parser before, I decided to write a Lisp interpreter."
    ]
  },
  {
    "id": "java_decompiler",
    "name": "Java Decompiler",
    "tags": ["reverse engineering", "decompiler"],
    "lang": "Rust",
    "active": true,
    "url": "https://github.com/Caellian/java-decompiler",
    "description": [
      "Java decompiler written from scratch to be as performant as possible with large .jar files.",
      "What I initially wanted to write is a deobfuscator, but bytecode contains additional information which removes the need for parsing code and assembling AST.",
      "There are also no decompilers for JVM languages other than Java so I plan on gradually supporting them as this project progresses."
    ]
  },
  {
    "id": "math",
    "name": "Math",
    "tags": ["linear algebra", "abstraction"],
    "lang": "Kotlin",
    "url": "https://github.com/Caellian/Math",
    "description": [
      "N-dimensional linear algebra library.",
      "It's made for Kotlin but works just as well with Java.",
      "This library was first written in Scala and then ported to Kotlin to make it easier to use from pure Java."
    ]
  },
  {
    "id": "arg_lib",
    "name": "ArgLib",
    "tags": ["arguments"],
    "lang": "Kotlin",
    "url": "https://github.com/Caellian/ArgLib",
    "description": [
      "Lightweight argument parsing/handling library.",
      "I wrote it for some of my simpler apps that would've been overbloated by use of larget argument parsing libraries."
    ]
  },
  {
    "id": "note_stream",
    "name": "NoteStream",
    "tags": ["Android", "SQLite"],
    "lang": "Kotlin",
    "url": "https://github.com/Caellian/NoteStream",
    "description": [
      "Android application for streaming YouTube and playing music without connection to the internet.",
      "NoteStream supports creating mixed playlists, downloading individual songs from YouTube as well as entire playlists and much more.",
      "It was what I initially used to get into Android developement, learn SQLite."
    ]
  },
  {
    "id": "paradox_generator",
    "name": "ParadoxGenerator",
    "tags": ["gui", "swing"],
    "lang": "Java",
    "url": "https://github.com/Caellian/ParadoxGenerator",
    "description": [
      "Random string generator completely configurable through XML.",
      "It supports templates, internal functions and localization.",
      "It comes with many random string, number, format & date generators."
    ]
  },
  {
    "id": "flow_api",
    "name": "FlowAPI",
    "tags": ["data management", "abstraction"],
    "lang": "Java",
    "url": "https://github.com/Caellian/FlowAPI",
    "description": [
      "API for managing flow of abstract packets of abstract data in a node network.",
      "It was originally designed as a Minecraft power API but it helps with transfer of any form of data structured as packets containing interface defined properties",
      "It also helps with handling object conversion and supplies several useful classes which make collaboration much easier."
    ]
  },
  {
    "id": "kson",
    "name": "Kson",
    "tags": ["data management"],
    "lang": "Kotlin",
    "url": "https://github.com/Caellian/Kson",
    "description": [
      "Library simplifying JSON serialization and deserialization of Kotlin objects (singleton classes).",
      "It doesn't do very much, I wrote it so I don't have to copy and paste code for loading program configuration files."
    ]
  },
  {
    "id": "crawler",
    "name": "Crawler",
    "tags": ["beatiful soup", "regex", "phantom-js"],
    "lang": "Python",
    "url": "https://github.com/Caellian/Crawler",
    "description": [
      "Web regex search engine/crawler.",
      "It allows specifying regex to be searched for on different websites, specifying search query, and returns a list of matches.",
      "It crawls Google, Bing and DuckDuckGo with PhantomJS for results."
    ]
  },
  {
    "id": "smart_flood_fill",
    "name": "SmartFloodFill MCEdit Filter",
    "tags": ["bfs"],
    "lang": "Python",
    "url": "https://github.com/Caellian/MCEdit-Filters",
    "description": [
      "Flood fill filter for MCEdit (Minecraft map editor) taking into account blocks sharing sides or edges (configurable).",
      "This project helped me learn basics of writing MCEdit filters."
    ]
  },
  {
    "id": "bow_engine",
    "name": "Bow Engine",
    "tags": ["rendering", "OpenGL"],
    "lang": "Java",
    "url": "https://github.com/Caellian/BowEngine",
    "description": [
      "A standard LWJGL2 OpenGL rendering engine with very primitive shading.",
      "This was the first game engine I wrote, it was painfuly slow due to my lack of experience and knowledge with rendering back then."
    ]
  },
  {
    "id": "conky",
    "name": "conky",
    "tags": ["scripting", "Xorg"],
    "lang": "C",
    "url": "https://github.com/brndnmtthws/conky/pull/955",
    "contribution": true,
    "description": ["Added mouse event handling to conky (system monitor)."]
  },
  {
    "id": "logisim_evolution",
    "name": "Logisim Evolution",
    "tags": ["gradle", "project management"],
    "lang": "C",
    "url": "https://github.com/logisim-evolution/logisim-evolution/commit/bc88a21e6173c884fb9dafc9139d1433a7c7b5e6",
    "contribution": true,
    "description": [
      "Migrated Logisim Evolution from Ant build system to Gradle.",
      "Cleaned up project structure to make it follow best/common practices."
    ]
  },
  {
    "id": "review_heatmap",
    "name": "review-heatmap",
    "tags": [],
    "lang": "Python",
    "url": "https://github.com/Caellian/review-heatmap",
    "fork": true,
    "description": [
      "Dark themed review heatmap for Anki.",
      "Fork of original review-heatmap customised to look neat with dark theme."
    ]
  },
  {
    "id": "feh",
    "name": "feh",
    "tags": ["json"],
    "lang": "C",
    "url": "https://github.com/Caellian/feh",
    "fork": true,
    "description": [
      "Added support for loading JSON configuration files.",
      "Assignment was adding per-image configurable slideshow duration."
    ]
  },
  {
    "id": "enigma",
    "name": "Enigma",
    "tags": ["swing", "reverse engineering"],
    "lang": "Java",
    "url": "https://github.com/Caellian/Enigma",
    "fork": true,
    "description": [
      "I added some gui components and menus that made my workflow easier at the time."
    ]
  }
]
